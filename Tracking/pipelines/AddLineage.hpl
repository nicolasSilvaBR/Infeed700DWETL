<?xml version="1.0" encoding="UTF-8"?>
<pipeline>
  <info>
    <name>AddLineage</name>
    <name_sync_with_filename>Y</name_sync_with_filename>
    <description/>
    <extended_description/>
    <pipeline_version/>
    <pipeline_type>Normal</pipeline_type>
    <pipeline_status>0</pipeline_status>
    <parameters>
      <parameter>
        <name>TableName</name>
        <default_value/>
        <description/>
      </parameter>
      <parameter>
        <name>WorkflowName</name>
        <default_value/>
        <description/>
      </parameter>
    </parameters>
    <capture_transform_performance>N</capture_transform_performance>
    <transform_performance_capturing_delay>1000</transform_performance_capturing_delay>
    <transform_performance_capturing_size_limit>100</transform_performance_capturing_size_limit>
    <created_user>-</created_user>
    <created_date>2024/12/16 12:29:48.597</created_date>
    <modified_user>-</modified_user>
    <modified_date>2024/12/16 12:29:48.597</modified_date>
  </info>
  <notepads>
  </notepads>
  <order>
  </order>
  <transform>
    <name>Full Load check and Start Lineage</name>
    <type>ExecSql</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <arguments>
</arguments>
    <connection>Infeed700DW</connection>
    <delete_field/>
    <execute_each_row>N</execute_each_row>
    <insert_field/>
    <quoteString>N</quoteString>
    <read_field/>
    <replace_variables>Y</replace_variables>
    <set_params>N</set_params>
    <single_statement>N</single_statement>
    <sql>	 DECLARE @StartDate DATETIME =  GETDATE()

	 -- If the table exists, but was never loaded before, there won't be a record for it in the table
	-- A record is created for the @TableName, with the minimum possible date in the LoadDate column
	IF NOT EXISTS (SELECT 1 FROM [Tracking].[IncrementalLoads] WHERE TableName = '${TableName}') BEGIN
		BEGIN TRANSACTION
		INSERT INTO [Tracking].[IncrementalLoads]
		SELECT '${TableName}', '1753-01-01'
		COMMIT
	END


      INSERT INTO [Tracking].[ETLLineage] 
	    (WorkflowName, PipelineName, StartTime, Status)
      VALUES 
        ('${WorkFlowName}', '${TableName}', @StartDate, 'Started')
  
</sql>
    <update_field/>
    <attributes/>
    <GUI>
      <xloc>256</xloc>
      <yloc>128</yloc>
    </GUI>
  </transform>
  <transform_error_handling>
  </transform_error_handling>
  <attributes/>
</pipeline>
