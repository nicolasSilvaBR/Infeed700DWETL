<?xml version="1.0" encoding="UTF-8"?>
<pipeline>
  <info>
    <name>RawMaterialTransfersToStaging</name>
    <name_sync_with_filename>Y</name_sync_with_filename>
    <description/>
    <extended_description/>
    <pipeline_version/>
    <pipeline_type>Normal</pipeline_type>
    <parameters>
    </parameters>
    <capture_transform_performance>N</capture_transform_performance>
    <transform_performance_capturing_delay>1000</transform_performance_capturing_delay>
    <transform_performance_capturing_size_limit>100</transform_performance_capturing_size_limit>
    <created_user>-</created_user>
    <created_date>2025/01/02 10:31:12.019</created_date>
    <modified_user>-</modified_user>
    <modified_date>2025/01/02 10:31:12.019</modified_date>
  </info>
  <notepads>
  </notepads>
  <order>
    <hop>
      <from>Infeed 700 Raw Material Transfer Names</from>
      <to>Staging Raw Material Transfer names</to>
      <enabled>Y</enabled>
    </hop>
  </order>
  <transform>
    <name>Infeed 700 Raw Material Transfer Names</name>
    <type>TableInput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>Infeed700</connection>
    <execute_each_row>N</execute_each_row>
    <limit>0</limit>
    <sql>select StockTransaction.TransTypeId,PLCProcesses.iPLCProcessId,PLCProcesses.sPLCProcessName 
into #TransTypes
from STOCK.StockTransactionType 
join STOCK.StockTransaction ON StockTransaction.TransTypeId = StockTransactionType.TransTypeId
join STOCK.StockActiveTransfer on StockActiveTransfer.ActiveTransferId = StockTransaction.TransferId
join PLC.PLCProcesses ON PLCProcesses.iPLCProcessId = ProcessId
where StockTransaction.TransferId IS NOT NULL AND StockTransactionType.TransTypeMaterial = 'RM' and 
(StockTransactionType.TransTypeGroup = 'T' OR StockTransactionType.TransTypeGroup = 'U')
group by StockTransaction.TransTypeId,PLCProcesses.iPLCProcessId,PLCProcesses.sPLCProcessName
 
 
select iPLCProcessId AS RawMaterialTransferId,sPLCProcessName AS RawMaterialTransferName
from #TransTypes group by iPLCProcessId,sPLCProcessName
 
UNION
SELECT	-1 AS [RawMaterialTransferId],
	'N/A' AS [RawMaterialTransferName]

drop table #TransTypes
</sql>
    <variables_active>N</variables_active>
    <attributes/>
    <GUI>
      <xloc>224</xloc>
      <yloc>176</yloc>
    </GUI>
  </transform>
  <transform>
    <name>Staging Raw Material Transfer names</name>
    <type>TableOutput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <commit>1000</commit>
    <connection>Infeed700DWStaging</connection>
    <fields>
      <field>
        <column_name>RawMaterialTransferId</column_name>
        <stream_name>RawMaterialTransferId</stream_name>
      </field>
      <field>
        <column_name>RawMaterialTransferName</column_name>
        <stream_name>RawMaterialTransferName</stream_name>
      </field>
    </fields>
    <ignore_errors>N</ignore_errors>
    <only_when_have_rows>N</only_when_have_rows>
    <partitioning_daily>N</partitioning_daily>
    <partitioning_enabled>N</partitioning_enabled>
    <partitioning_monthly>Y</partitioning_monthly>
    <return_keys>N</return_keys>
    <schema>[Config]</schema>
    <specify_fields>Y</specify_fields>
    <table>stg_dimRawMaterialTransfers</table>
    <tablename_in_field>N</tablename_in_field>
    <tablename_in_table>Y</tablename_in_table>
    <truncate>Y</truncate>
    <use_batch>Y</use_batch>
    <attributes/>
    <GUI>
      <xloc>512</xloc>
      <yloc>176</yloc>
    </GUI>
  </transform>
  <transform_error_handling>
  </transform_error_handling>
  <attributes/>
</pipeline>
